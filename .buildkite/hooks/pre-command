#!/usr/bin/env bash

set +u

if [[ "${BUILDKITE_LABEL}" == ":service_dog: Linting" ]]; then
  cd web && pnpm install && cd ../
fi

if [[ "${BUILDKITE_LABEL}" == ":docker: Build Image [coverage]" ]]; then
  cp -R /buildkite/.pnpm-store .
fi

if [[ "${BUILDKITE_LABEL}" =~ ":debian: Build Package" ]]; then
  buildkite-agent artifact download "authelia-linux-${ARCH}.tar.gz" .
fi

if [[ "${BUILDKITE_LABEL}" =~ ":selenium:" ]]; then
  DEFAULT_ARCH=coverage
  echo "--- :docker: Extract, load and tag build container"
  buildkite-agent artifact download "authelia-image-${DEFAULT_ARCH}*" .
  zstdcat "authelia-image-${DEFAULT_ARCH}.tar.zst" | docker load
  docker tag authelia/authelia authelia:dist
fi

if [[ "${BUILDKITE_LABEL}" == ":docker: Deploy Manifest" ]]; then
  echo "--- :go: :react: :swagger: Extract pre-built binary"
  buildkite-agent artifact download "authelia-linux-*-musl.tar.gz" .
  for archive in authelia-linux-*-musl.tar.gz; do tar xzf ${archive} --wildcards "authelia-linux-*"; done
fi

if [[ "${BUILDKITE_LABEL}" == ":github: Deploy Artifacts" ]]; then
  buildkite-agent artifact download "authelia-*.tar.gz*" .
  buildkite-agent artifact download "authelia_*.deb*" .
fi

if [[ "${BUILDKITE_LABEL}" == ":debian: :fedora: :ubuntu: Deploy APT" ]]; then
  buildkite-agent artifact download "authelia_*.deb" .
fi